{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.mensajeeror = \"\";\n    this.emailPattern = \"[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}\";\n    this.mensaje = \"\";\n    this.actived = false;\n    this.usuario = \"\";\n  }\n  ngOnInit() {\n    this.logForm = this.initForm();\n  }\n  onSubmit() {\n    this.logForm.markAllAsTouched();\n    if (this.logForm.valid) {\n      console.log('Form ->', this.logForm.value);\n    }\n    this.mensaje = \"Registrado\";\n    this.actived = true;\n  }\n  initForm() {\n    return this.fb.group({\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  camponovalido(campo) {\n    return this.logForm.get(campo)?.invalid && this.logForm.get(campo)?.touched;\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EASzBC,YAA6BC,EAAe,EACxBC,MAAa;IADJ,OAAE,GAAFD,EAAE;IACX,WAAM,GAANC,MAAM;IAP1B,gBAAW,GAAQ,EAAE;IACrB,iBAAY,GAAW,4CAA4C;IAEnE,YAAO,GAAQ,EAAE;IACjB,YAAO,GAAS,KAAK;IACrB,YAAO,GAAQ,EAAE;EAKL;EAGZC,QAAQ;IAGN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,QAAQ,EAAE;EAChC;EAEAC,QAAQ;IAEN,IAAI,CAACF,OAAO,CAACG,gBAAgB,EAAE;IAC/B,IAAG,IAAI,CAACH,OAAO,CAACI,KAAK,EAAC;MACnBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,OAAO,CAACO,KAAK,CAAC;;IAI7C,IAAI,CAACC,OAAO,GAAC,YAAY;IACzB,IAAI,CAACC,OAAO,GAAC,IAAI;EAGnB;EAEAR,QAAQ;IACN,OAAO,IAAI,CAACJ,EAAE,CAACa,KAAK,CAAC;MAGnBC,KAAK,EAAM,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACkB,QAAQ,EAAClB,UAAU,CAACmB,OAAO,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC;MAE5EC,QAAQ,EAAG,CAAC,EAAE,EAAC,CAACrB,UAAU,CAACkB,QAAQ,EAAElB,UAAU,CAACsB,SAAS,CAAC,CAAC,CAAC,CAAC;KAC7D,CAAC;EACL;EAMAC,aAAa,CAACC,KAAY;IACxB,OAAQ,IAAI,CAAClB,OAAO,CAACmB,GAAG,CAACD,KAAK,CAAC,EAAEE,OAAO,IAC/B,IAAI,CAACpB,OAAO,CAACmB,GAAG,CAACD,KAAK,CAAC,EAAEG,OAAO;EAI3C;CACD;AAzDY1B,cAAc,eAL1BF,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW7B,cAAc,CAyD1B;SAzDYA,cAAc","names":["Component","Validators","LoginComponent","constructor","fb","router","ngOnInit","logForm","initForm","onSubmit","markAllAsTouched","valid","console","log","value","mensaje","actived","group","email","required","pattern","emailPattern","password","minLength","camponovalido","campo","get","invalid","touched","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\Paginaweb-main\\src\\app\\componentesP\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  \n  mensajeeror:string=\"\"\n  emailPattern: string = \"[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}\";\n  logForm!: FormGroup;\n  mensaje:string=\"\"\n  actived:boolean=false;\n  usuario:string=\"\"\n  constructor(private readonly fb: FormBuilder,\n              private router:Router,\n            ) { \n\n              }\n \n\n  ngOnInit(): void {\n\n   \n    this.logForm = this.initForm();\n  }\n\n  onSubmit(): void {\n\n    this.logForm.markAllAsTouched();\n    if(this.logForm.valid){\n       console.log('Form ->', this.logForm.value);\n    }\n   \n    \n    this.mensaje=\"Registrado\"\n    this.actived=true\n\n   \n  }\n\n  initForm(): FormGroup {\n    return this.fb.group({\n\n      \n      email:     ['', [Validators.required,Validators.pattern(this.emailPattern)]],\n     \n      password:  ['',[Validators.required, Validators.minLength(6)]],\n     })\n  }\n\n\n\n  \n\n  camponovalido(campo:string){\n    return  this.logForm.get(campo)?.invalid\n          && this.logForm.get(campo)?.touched\n       \n          \n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}